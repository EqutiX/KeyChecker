<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AADgwYL/4cCB/+HAgf/iv4D/4r+A/+K+fv/jvX3/47x9/+W7fP/mu3z/5bp7/+W5ef/muXn/5rh4/+W3
        d//mtnf/57Z2/+e1c//ntXL/57Ry/+izcf/os3D/6bJv/+ixbv/qsG7/67Br/+uvav/rrmr/6q1p/+ut
        af/trGj/7axn/+DChP/gwYP/4cGC/+HAgf/iv4D/4r+A/+K+f//ivX3/4719/+S8ff/mu3z/5bp7/+W5
        ev/luXn/5rh4/+W3d//mt3f/5rZ1/+e1dP/ntXP/57Ry/+izcv/os3D/6bJv/+ixbv/psG7/6rBt/+uv
        bP/rrmr/665q/+utaf/srWj/4MOG/+DChf/fwoP/4MGC/+HAgf/iwIH/4r+A/+K/f//ivn7/4r19/+S8
        ff/mu3z/5rt8/+W6e//luXn/5bh4/+W4eP/mt3f/5rd3/+e2df/ntXP/6LRz/+izcv/osnH/6LJw/+iy
        b//psW7/67Bu/+uvbP/rr2v/665q/+utaf/gxIf/4MOG/+DDhv/gwoT/4MGC/+DAgf/hwIH/4r+A/+G+
        f//hvX3/4bx8/+K8ff/ku3z/5bp7/+W6e//kuXn/5Lh4/+W4eP/lt3f/5bZ2/+a1df/ntXP/5rRy/+ez
        cv/nsnH/6LJw/+iyb//nsG7/6LBt/+uvbP/rr2v/665q/+DFif/gxIf/4MSG/9/Chf/ixIb/5caG/+PC
        g//hwIH/5cKC/+bCgv/lwYH/5L9+/+W/f//nwH//57x9/+m9fv/pvXz/5rp6/+m8e//qu3v/6bp5/+i3
        d//quHf/67h1/+u3df/qtXL/6LNx/+y1cv/stHD/6bFu/+qwbf/rr2z/4MWM/+DFi//fxIf/5smK/9K2
        fP+9pG7/0bZ7/+DBgv/Jq3L/xKVv/8Wlb//Us3j/z61z/8SkbP/Wsnb/zahu/8qlbP/asXX/yaJp/8Ob
        Y//IoGj/2a5x/8+kav/InmT/yZ1j/9ipa//ms3L/zZ1i/82eY//jrm3/6bJv/+mwbv/ex43/38WM/+TI
        jf/Cqnb/S0Q2/zAtKf+Dc1D/indR/yQhG/8qJh7/LSkf/3toRP8uKSD/Pzcn/4FrR/8fHBj/VUYw/21Y
        Ov8rJyL/PDcw/z4zJf96Yj//KSMc/ysmHf8jHhf/rYhW/5d3TP8ZFxX/VUIr/96ra//qs2//6LFu/9zI
        jv/axYv/7dKV/2JXQP9MTlT/aGls/0I+Nv9fUTX/PD5C/z8/QP8/Pz7/XU0t/0VFR/8zMS3/JBsM/z1B
        R/9ORDL/Vkcv/1BTWP9HSU3/NS4l/25YN/85PED/Q0NE/zM1OP+wiVX/im1H/zI5Q/9PQCz/4a5t/+m0
        cf/osm//3cmP/9rGjf/o0ZT/bGNK/1pbXv9MTU7/UExC/1xPMf9ubnD/oJ+f/1dWU/9YSCn/Y2Fg/19f
        X/9VVVb/ZGZp/1ZMOv9XSC//hYaJ/zU2N/9fTDH/fWRA/21vcf91dXb/T0Mz/8uhaf9rVTf/Wl9l/0Y5
        Kf/AlV7/5rRy/+izcf/cypD/2seO/+jUlf9kXEX/iYuP/1dYWv85NSz/YVM4/3d5ff+mp6j/YmFg/1ZG
        Jv91dXX/x8jJ/6ampf+0t7v/SkAw/1hKMv+Qk5f/Xl9i/zozKf9gTC7/d3h8/6Ghov9cW1n/alEv/zMx
        L/+tra7/NDY5/25VNP/uu3j/57Ny/9zLkv/byZD/4s+T/6+fcv9dW1X/W1pb/4x+YP/Cqnf/aGJW/1JT
        Vf9/c1n/oIpc/zMyMf9KSkf/KSgm/0pKS/9TRzL/ZVU5/z4+QP9fX17/QTou/3VfPP83Njb/XV1d/31r
        U/+mhFP/NTMx/2lmYv81NTb/gmZB//C+e//ltHP/28yS/9vMkv/cypH/5NGV/8CueP+6qHP/3ciO/+fQ
        k//Ls3z/tJ1q/9m/g//hxon/wKdx/72kbf/EqnL/uZ9m/9G0ef/Vtnr/u59m/7mbYv/MrHH/27h7/8Gg
        Z/+3lV3/3rV3/+u/f//Fn2b/v5dd/8ScYv/ftHX/57h4/+a2dv/azZP/282T/9vLkv/Yx4//69ic/6qb
        cP9JQi3/TUUy/1JKNv9ZTzr/UEYz/05FMf9WTDT/WEwy/1dLNP9ZTTb/VEcx/1FHL/9ZSzX/WUkx/1VJ
        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
        J/+umWv/59CT/9vGjP/gxo3/4MWM/+DFif/gxYf/1Nun/9Tbpv/U2qX/09ek/9zfqf+lqH7/bG1M/3R0
        UP9zck//c3JO/3JyTf90cVD/cHFW/2twT/9ucFD/bm9P/25vS/9zcVP/dmlK/3VnSv90Z0n/dWdI/3Zo
        Sf9vX0P/sZpt/+bVmP/ax43/3MiO/9zHjf/dx43/4MaM/9/Fiv/T3Kj/1Nuo/9Tbpv/V26X/09mk/9zg
        qv/m6bD/5Oet/+Tmrf/l5az/5uSr/+bkqf/m46f/5+Ko/+fhp//n4KX/6d+k/+nfof/p36L/6d6i/+nd
        oP/q3aD/6tye/+vdnv/h05j/2smR/9zKkP/cyo//3MmO/9zIjv/dx43/38aN/9Hdqf/S3Kj/09uo/9Xb
        p//U26b/0tik/9DVov/S1aH/0tWf/9HUnv/T057/09Kd/9TSm//T0Zr/09Ca/9PPmv/Uz5n/1M6X/9bN
        lf/VzZX/1syU/9fLk//WypL/1sqR/9nLkf/bzJL/3MuS/9zKkf/dypD/3MmP/9zIjv/dx43/0t6q/9Hd
        qf/R3Kn/09uo/9TbqP/U26b/1Nql/9Tapf/U2aT/1dmi/9bYof/V16D/1taf/9fVnv/X1J3/19Sd/9bT
        nP/X0pv/2NGa/9nRmP/a0Jf/2c+W/9rOlv/azZX/2s2U/9vNk//bzJL/3MuS/9zKkf/cypD/3cmP/93J
        jv/R3qz/0t6r/9Heqv/R3an/0tyo/9TbqP/U26b/1Nul/9Tapf/V2aT/1dmj/9XYof/W16H/1tag/9fW
        n//X1Z3/19Sd/9fTnP/X05z/19Kb/9nRmf/Z0Jf/2tCX/9rPlv/azpX/2s6U/9rNk//bzJP/28yS/93K
        kv/cypH/3MqQ/9Dgrf/R36z/0t6r/9Heqv/R3an/0typ/9TbqP/U26f/1Num/9Tapf/U2aX/1dij/9bZ
        ov/V2KH/1tag/9fWoP/X1Z7/19Wd/9fUnf/X05z/19Kb/9jRmv/Z0Zj/2dCX/9rPlv/azpb/2s2V/9rN
        k//azZP/28yS/9zLkv/cypH/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>